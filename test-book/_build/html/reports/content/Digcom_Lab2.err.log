Traceback (most recent call last):
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lampr\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import plotly.graph_objs as go
from scipy import signal
import numpy as np

# Define filter sizes
filter_sizes = [32, 64, 128, 160, 256]

# Compute frequency responses
freq32, resp32 = signal.freqz(h32)
freq64, resp64 = signal.freqz(h64)
freq128, resp128 = signal.freqz(h128)
freq160, resp160 = signal.freqz(h160)
freq256, resp256 = signal.freqz(h256)

# Compute frequency responses
freqs = {}
resps = {}
for filt in [32, 64, 128, 160, 256]:
    freqs[f'h{filt}'], resps[f'h{filt}'] = signal.freqz(eval(f'h{filt}'))

# Create initial traces for the plot
traces = []
for filt in filter_sizes:
    traces.append(go.Scatter(
        x=0.5 * Fs * freqs[f'h{filt}'] / np.pi,
        y=np.abs(resps[f'h{filt}']),
        mode='lines',
        name=f'h{filt}',
        visible=False  # Initially set traces to be hidden
    ))

# Create layout for the plot
layout = go.Layout(
    title='Frequency Response of Selected Filters',
    xaxis_title='Frequency (Hz)',
    yaxis_title='Gain',
    yaxis_type='log',
    template='plotly_white',
    xaxis=dict(range=[0, 3000])  # Set x-axis range from 0 to 3000 Hz
)

# Define callback function to update visibility of traces
def update_visibility(selected_filters):
    visibility = [filt in selected_filters for filt in filter_sizes]
    return visibility

# Create dropdown menu for selecting filters
dropdown_menu = []
for filt in filter_sizes:
    dropdown_menu.append(
        dict(
            args=[{'visible': update_visibility([filt])}],
            label=f'h{filt}',
            method='update'
        )
    )

# Append 'All' option to dropdown menu
dropdown_menu.insert(0, dict(args=[{'visible': update_visibility(filter_sizes)}], label='All', method='update'))

# Update layout with dropdown menu
layout['updatemenus'] = [
    dict(
        buttons=dropdown_menu,
        direction='down',
        pad={'r': 10, 't': 10},
        showactive=True,
        x=0.1,
        xanchor='left',
        y=1.1,
        yanchor='top'
    )
]

# Create figure
fig = go.Figure(data=traces, layout=layout)

# Show plot
fig.show()

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mNameError[0m                                 Traceback (most recent call last)
Cell [1;32mIn[18], line 9[0m
[0;32m      6[0m filter_sizes [38;5;241m=[39m [[38;5;241m32[39m, [38;5;241m64[39m, [38;5;241m128[39m, [38;5;241m160[39m, [38;5;241m256[39m]
[0;32m      8[0m [38;5;66;03m# Compute frequency responses[39;00m
[1;32m----> 9[0m freq32, resp32 [38;5;241m=[39m signal[38;5;241m.[39mfreqz([43mh32[49m)
[0;32m     10[0m freq64, resp64 [38;5;241m=[39m signal[38;5;241m.[39mfreqz(h64)
[0;32m     11[0m freq128, resp128 [38;5;241m=[39m signal[38;5;241m.[39mfreqz(h128)

[1;31mNameError[0m: name 'h32' is not defined

