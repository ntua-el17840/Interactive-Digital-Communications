Traceback (most recent call last):
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\lampr\anaconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\lampr\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
app1 = Dash(__name__, external_stylesheets=[dbc.themes.BOOTSTRAP])

# Παράμετροι δειγματοληψίας
fs = 1000  # Sampling frequency in Hz
T = 1 / fs  # Sampling period
L = 1000  # Number of samples

# Create time vector
t = np.arange(0, L) * T

# Layout of the Dash app
app1.layout = html.Div(
    children=[
        html.H2('Interactive Signal and Fourier Transformation'),
        dcc.RangeSlider(
            id='frequency-slider',
            min=1,
            max=51,
            step=1,
            value=[5, 10],
            marks={i: f'{i} Hz' for i in range(1, 51, 5)}
        ),
        dbc.Row(
            children=[
                dbc.Col(
                    dcc.Graph(id='original-signal'),
                    width=6
                ),
                dbc.Col(
                    dcc.Graph(id='fourier-transform'),
                    width=6
                )
            ]
        )
    ],
    style={'backgroundColor': 'white', 'padding': '20px'}
)

# Callback to update graphs
@app1.callback(
    [Output('original-signal', 'figure'),
     Output('fourier-transform', 'figure')],
    [Input('frequency-slider', 'value')]
)
def update_graph(selected_frequencies):
    # Generate the signal with the selected frequencies
    signal = np.zeros(len(t))
    for f in range(selected_frequencies[0], selected_frequencies[1] + 1):
        signal += np.sin(2 * np.pi * f * t)
                    

    # Calculate the FFT of the original signal
    original_signal_fft = fft(signal)
    # Calculate frequencies for the FFT of the original signal
    original_freqs = fftfreq(L, T)[:L // 2]
    # Calculate magnitude of Fourier coefficients (amplitude) for the original signal
    original_magnitude = np.abs(original_signal_fft)[:L // 2]
   

    # Original signal graph
    original_signal_figure = {
        'data': [go.Scatter(x=t, y=signal, mode='lines', line=dict(color='#00CC96', width=2))],
        'layout': go.Layout(
            title='Original Signal',
            xaxis={'title': 'Time (s)', 'showgrid': True, 'gridcolor': 'LightGrey'},
            yaxis={'title': 'Amplitude', 'showgrid': True, 'gridcolor': 'LightGrey'},
            margin={'l': 40, 'b': 40, 't': 40, 'r': 40},
            hovermode='closest',
            paper_bgcolor='white',
            plot_bgcolor='white',
            template='plotly_white'
        )
    }

    # Fourier Transformation graph
    fourier_transform_figure = {
        'data': [go.Scatter(x=original_freqs, y=original_magnitude, mode='lines', line=dict(color='#1F77B4', width=2))],
        'layout': go.Layout(
            title='Fourier Transformation of Original Signal',
            xaxis={'title': 'Frequency (Hz)', 'showgrid': True, 'gridcolor': 'LightGrey'},
            yaxis={'title': 'Amplitude', 'showgrid': True, 'gridcolor': 'LightGrey'},
            margin={'l': 40, 'b': 40, 't': 40, 'r': 40},
            hovermode='closest',
            paper_bgcolor='white',
            plot_bgcolor='white',
            template='plotly_white'
        )
    }

    
    # Return this additional figure in the callback
    return original_signal_figure, fourier_transform_figure

    

if __name__ == '__main__':
    app1.run_server(debug=True, port=8055)

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mOSError[0m                                   Traceback (most recent call last)
Cell [1;32mIn[15], line 97[0m
[0;32m     92[0m     [38;5;28;01mreturn[39;00m original_signal_figure, fourier_transform_figure
[0;32m     96[0m [38;5;28;01mif[39;00m [38;5;18m__name__[39m [38;5;241m==[39m [38;5;124m'[39m[38;5;124m__main__[39m[38;5;124m'[39m:
[1;32m---> 97[0m     [43mapp1[49m[38;5;241;43m.[39;49m[43mrun_server[49m[43m([49m[43mdebug[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mport[49m[38;5;241;43m=[39;49m[38;5;241;43m8055[39;49m[43m)[49m

File [1;32m~\anaconda3\Lib\site-packages\dash\dash.py:2175[0m, in [0;36mDash.run_server[1;34m(self, *args, **kwargs)[0m
[0;32m   2169[0m [38;5;28;01mdef[39;00m [38;5;21mrun_server[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m   2170[0m [38;5;250m    [39m[38;5;124;03m"""`run_server` is a deprecated alias of `run` and may be removed in a[39;00m
[0;32m   2171[0m [38;5;124;03m    future version. We recommend using `app.run` instead.[39;00m
[0;32m   2172[0m 
[0;32m   2173[0m [38;5;124;03m    See `app.run` for usage information.[39;00m
[0;32m   2174[0m [38;5;124;03m    """[39;00m
[1;32m-> 2175[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mrun[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [1;32m~\anaconda3\Lib\site-packages\dash\dash.py:2066[0m, in [0;36mDash.run[1;34m(self, host, port, proxy, debug, jupyter_mode, jupyter_width, jupyter_height, jupyter_server_url, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors, **flask_run_options)[0m
[0;32m   2063[0m             extra_files[38;5;241m.[39mappend(path)
[0;32m   2065[0m [38;5;28;01mif[39;00m jupyter_dash[38;5;241m.[39mactive:
[1;32m-> 2066[0m     [43mjupyter_dash[49m[38;5;241;43m.[39;49m[43mrun_app[49m[43m([49m
[0;32m   2067[0m [43m        [49m[38;5;28;43mself[39;49m[43m,[49m
[0;32m   2068[0m [43m        [49m[43mmode[49m[38;5;241;43m=[39;49m[43mjupyter_mode[49m[43m,[49m
[0;32m   2069[0m [43m        [49m[43mwidth[49m[38;5;241;43m=[39;49m[43mjupyter_width[49m[43m,[49m
[0;32m   2070[0m [43m        [49m[43mheight[49m[38;5;241;43m=[39;49m[43mjupyter_height[49m[43m,[49m
[0;32m   2071[0m [43m        [49m[43mhost[49m[38;5;241;43m=[39;49m[43mhost[49m[43m,[49m
[0;32m   2072[0m [43m        [49m[43mport[49m[38;5;241;43m=[39;49m[43mport[49m[43m,[49m
[0;32m   2073[0m [43m        [49m[43mserver_url[49m[38;5;241;43m=[39;49m[43mjupyter_server_url[49m[43m,[49m
[0;32m   2074[0m [43m    [49m[43m)[49m
[0;32m   2075[0m [38;5;28;01melse[39;00m:
[0;32m   2076[0m     [38;5;28mself[39m[38;5;241m.[39mserver[38;5;241m.[39mrun(host[38;5;241m=[39mhost, port[38;5;241m=[39mport, debug[38;5;241m=[39mdebug, [38;5;241m*[39m[38;5;241m*[39mflask_run_options)

File [1;32m~\anaconda3\Lib\site-packages\dash\_jupyter.py:399[0m, in [0;36mJupyterDash.run_app[1;34m(self, app, mode, width, height, host, port, server_url)[0m
[0;32m    397[0m     display(HTML(msg))
[0;32m    398[0m [38;5;28;01melse[39;00m:
[1;32m--> 399[0m     [38;5;28;01mraise[39;00m final_error

File [1;32m~\anaconda3\Lib\site-packages\dash\_jupyter.py:386[0m, in [0;36mJupyterDash.run_app[1;34m(self, app, mode, width, height, host, port, server_url)[0m
[0;32m    383[0m         [38;5;28;01mraise[39;00m err
[0;32m    385[0m [38;5;28;01mtry[39;00m:
[1;32m--> 386[0m     [43mwait_for_app[49m[43m([49m[43m)[49m
[0;32m    388[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39min_colab:
[0;32m    389[0m         JupyterDash[38;5;241m.[39m_display_in_colab(dashboard_url, port, mode, width, height)

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:49[0m, in [0;36mretry.<locals>.wrap.<locals>.wrapped_f[1;34m(*args, **kw)[0m
[0;32m     47[0m [38;5;129m@six[39m[38;5;241m.[39mwraps(f)
[0;32m     48[0m [38;5;28;01mdef[39;00m [38;5;21mwrapped_f[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkw):
[1;32m---> 49[0m     [38;5;28;01mreturn[39;00m [43mRetrying[49m[43m([49m[38;5;241;43m*[39;49m[43mdargs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mdkw[49m[43m)[49m[38;5;241;43m.[39;49m[43mcall[49m[43m([49m[43mf[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkw[49m[43m)[49m

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:212[0m, in [0;36mRetrying.call[1;34m(self, fn, *args, **kwargs)[0m
[0;32m    209[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mstop(attempt_number, delay_since_first_attempt_ms):
[0;32m    210[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_wrap_exception [38;5;129;01mand[39;00m attempt[38;5;241m.[39mhas_exception:
[0;32m    211[0m         [38;5;66;03m# get() on an attempt with an exception should cause it to be raised, but raise just in case[39;00m
[1;32m--> 212[0m         [38;5;28;01mraise[39;00m [43mattempt[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43m)[49m
[0;32m    213[0m     [38;5;28;01melse[39;00m:
[0;32m    214[0m         [38;5;28;01mraise[39;00m RetryError(attempt)

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:247[0m, in [0;36mAttempt.get[1;34m(self, wrap_exception)[0m
[0;32m    245[0m         [38;5;28;01mraise[39;00m RetryError([38;5;28mself[39m)
[0;32m    246[0m     [38;5;28;01melse[39;00m:
[1;32m--> 247[0m         [43msix[49m[38;5;241;43m.[39;49m[43mreraise[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvalue[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvalue[49m[43m[[49m[38;5;241;43m1[39;49m[43m][49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvalue[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m[43m)[49m
[0;32m    248[0m [38;5;28;01melse[39;00m:
[0;32m    249[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mvalue

File [1;32m~\anaconda3\Lib\site-packages\six.py:719[0m, in [0;36mreraise[1;34m(tp, value, tb)[0m
[0;32m    717[0m     [38;5;28;01mif[39;00m value[38;5;241m.[39m__traceback__ [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m tb:
[0;32m    718[0m         [38;5;28;01mraise[39;00m value[38;5;241m.[39mwith_traceback(tb)
[1;32m--> 719[0m     [38;5;28;01mraise[39;00m value
[0;32m    720[0m [38;5;28;01mfinally[39;00m:
[0;32m    721[0m     value [38;5;241m=[39m [38;5;28;01mNone[39;00m

File [1;32m~\anaconda3\Lib\site-packages\retrying.py:200[0m, in [0;36mRetrying.call[1;34m(self, fn, *args, **kwargs)[0m
[0;32m    198[0m [38;5;28;01mwhile[39;00m [38;5;28;01mTrue[39;00m:
[0;32m    199[0m     [38;5;28;01mtry[39;00m:
[1;32m--> 200[0m         attempt [38;5;241m=[39m Attempt([43mfn[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m, attempt_number, [38;5;28;01mFalse[39;00m)
[0;32m    201[0m     [38;5;28;01mexcept[39;00m:
[0;32m    202[0m         tb [38;5;241m=[39m sys[38;5;241m.[39mexc_info()

File [1;32m~\anaconda3\Lib\site-packages\dash\_jupyter.py:377[0m, in [0;36mJupyterDash.run_app.<locals>.wait_for_app[1;34m()[0m
[0;32m    375[0m     [38;5;28;01mif[39;00m res [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mAlive[39m[38;5;124m"[39m:
[0;32m    376[0m         url [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;124mhttp://[39m[38;5;132;01m{[39;00mhost[38;5;132;01m}[39;00m[38;5;124m:[39m[38;5;132;01m{[39;00mport[38;5;132;01m}[39;00m[38;5;124m"[39m
[1;32m--> 377[0m         [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m(
[0;32m    378[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mAddress [39m[38;5;124m'[39m[38;5;132;01m{[39;00murl[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m already in use.[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[0;32m    379[0m             [38;5;124m"[39m[38;5;124m    Try passing a different port to run_server.[39m[38;5;124m"[39m
[0;32m    380[0m         )
[0;32m    381[0m [38;5;28;01mexcept[39;00m requests[38;5;241m.[39mConnectionError [38;5;28;01mas[39;00m err:
[0;32m    382[0m     _get_error()

[1;31mOSError[0m: Address 'http://127.0.0.1:8055' already in use.
    Try passing a different port to run_server.

